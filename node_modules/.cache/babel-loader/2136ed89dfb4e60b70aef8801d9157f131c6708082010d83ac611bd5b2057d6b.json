{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aljoe\\\\OneDrive\\\\Desktop\\\\React\\\\netflix\\\\src\\\\components\\\\RowPost\\\\RowPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport { imageUrl, API_KEY } from '../../constants/constants';\nimport axios from '../../axios';\nimport Youtube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [urlId, setUrlId] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n    }).catch(err => {\n      console.error('Network Error:', err);\n    });\n  }, [props.url]);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const handleMovie = id => {\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      const videos = response.data.results;\n      const trailer = videos.find(video => video.type === 'Trailer');\n      if (trailer) {\n        setUrlId(trailer.key);\n      } else {\n        console.log('No trailer found for this movie.');\n      }\n    }).catch(error => {\n      console.error('Error fetching trailer:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"poster\"\n      }, obj.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), urlId && /*#__PURE__*/_jsxDEV(Youtube, {\n      opts: opts,\n      videoId: urlId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(RowPost, \"lIVxEzTzpnefg03mVRxF4SNaXNc=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","imageUrl","API_KEY","axios","Youtube","jsxDEV","_jsxDEV","RowPost","props","_s","movies","setMovies","urlId","setUrlId","get","url","then","response","console","log","data","results","catch","err","error","opts","height","width","playerVars","autoplay","handleMovie","id","videos","trailer","find","video","type","key","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","obj","onClick","isSmall","src","backdrop_path","alt","videoId","_c","$RefreshReg$"],"sources":["C:/Users/aljoe/OneDrive/Desktop/React/netflix/src/components/RowPost/RowPost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './RowPost.css';\r\nimport { imageUrl, API_KEY } from '../../constants/constants';\r\nimport axios from '../../axios';\r\nimport Youtube from 'react-youtube';\r\n\r\nfunction RowPost(props) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [urlId, setUrlId] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get(props.url)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setMovies(response.data.results);\r\n            })\r\n            .catch(err => {\r\n                console.error('Network Error:', err);\r\n            });\r\n    }, [props.url]);\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    const handleMovie = (id) => {\r\n        axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\r\n            .then(response => {\r\n                const videos = response.data.results;\r\n                const trailer = videos.find(video => video.type === 'Trailer');\r\n                if (trailer) {\r\n                    setUrlId(trailer.key);\r\n                } else {\r\n                    console.log('No trailer found for this movie.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching trailer:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2>{props.title}</h2>\r\n            <div className='posters'>\r\n                {movies.map((obj) =>\r\n                    <img\r\n                        key={obj.id}\r\n                        onClick={() => handleMovie(obj.id)}\r\n                        className={props.isSmall ? 'smallPoster' : 'poster'}\r\n                        src={`${imageUrl + obj.backdrop_path}`}\r\n                        alt=\"poster\"\r\n                    />\r\n                )}\r\n            </div>\r\n            {urlId && <Youtube opts={opts} videoId={urlId} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RowPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}